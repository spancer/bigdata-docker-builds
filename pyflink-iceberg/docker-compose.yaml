version: '3.8'

services:
  postgres:
    image: postgres:13-alpine3.15
    restart: unless-stopped
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - "./data/pg/:/var/lib/postgresql/data"
    networks:
      - ngdbp-network

  pgadmin4:
    image: dpage/pgadmin4:6.5
    restart: unless-stopped
    ports:
      - '8010:80'
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: spencer@coomia.com
      PGADMIN_DEFAULT_PASSWORD: spencer
    networks:
      - ngdbp-network

  rest:
    image: coomia/iceberg-rest-catalog:0.1
    container_name: iceberg-rest
    networks:
      - ngdbp-network
    ports:
      - 8181:8181
    environment:
      - AWS_REGION=us-west-2
      - S3_ACCESS_KEY_ID=minio
      - S3_SECRET_ACCESS_KEY=minio123
      - CATALOG_WAREHOUSE=s3a://lakehouse/iceberg
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://minio:9000

  minio:
    hostname: minio
    image: 'minio/minio:latest'
    container_name: minio
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - minio-data:/data
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    healthcheck:
     test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
     interval: 30s
     timeout: 20s
     retries: 3
    command: ["server", "/data", "--console-address", ":9001"]
    networks:
      - ngdbp-network

  mc:
    depends_on:
      - minio
    image: minio/mc
    container_name: mc
    environment:
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=minio123
    networks:
      - ngdbp-network
    volumes:
      - ./data:/tmp/data
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://minio:9000 minio minio123) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc rm -r --force minio/lakehouse;
      /usr/bin/mc mb minio/lakehouse;
      /usr/bin/mc policy set public minio/lakehouse;
      /usr/bin/mc cp -r /tmp/data/* minio/lakehouse;
      exit 0; " 


  pyflink-iceberg:
    image: coomia/pyflink-iceberg:1.0
    container_name: pyflink-iceberg
    ports:
      - "8888:8888"
    volumes:
      - ./workspace:/workspace
    environment:
      - AWS_REGION=us-west-2
      - S3_ACCESS_KEY_ID=minio
      - S3_SECRET_ACCESS_KEY=minio123
      - FLINK_HOME=/opt/flink
      - JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
    networks:
      - ngdbp-network



volumes:
  minio-data:
    driver: local

networks:
  ngdbp-network:
    driver: bridge