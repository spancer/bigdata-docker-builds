version: '3'
services:
  jupyter:
    build: .
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/work/notebooks
    environment:
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=minio123
    networks:
      - ngdbp-network

  minio:
    hostname: minio
    image: 'minio/minio:latest'
    container_name: minio
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - minio-data:/data
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    healthcheck:
     test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
     interval: 30s
     timeout: 20s
     retries: 3
    command: ["server", "/data", "--console-address", ":9001"]
    networks:
      - ngdbp-network

  mc:
    depends_on:
      - minio
    image: minio/mc
    container_name: mc
    environment:
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=minio123
    networks:
      - ngdbp-network
    volumes:
      - ./data:/tmp/data
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://minio:9000 minio minio123) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc rm -r --force minio/lakehouse;
      /usr/bin/mc mb minio/lakehouse;
      /usr/bin/mc policy set public minio/lakehouse;
      /usr/bin/mc cp -r /tmp/data/* minio/lakehouse;
      exit 0; "   

volumes:
  minio-data:
    driver: local

networks:
  ngdbp-network:
    driver: bridge